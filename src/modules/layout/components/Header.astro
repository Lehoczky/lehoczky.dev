---
import type { HTMLAttributes } from "astro/types"

import Link from "@/modules/shared/components/Link.vue"
import { MY_GITHUB, MY_LINKEDIN } from "@/modules/shared/constants"
import { cn } from "@/modules/shared/libs/cn"

import HeaderLink from "./HeaderLink.astro"

export interface Props extends HTMLAttributes<"header"> {}

const { class: className, ...attrs } = Astro.props
---

<header
  class={cn(
    "group sticky top-0 z-40 border-b border-neutral-800 bg-neutral-900/80 shadow-lg backdrop-blur-lg",
    className,
  )}
  {...attrs}
>
  <div
    class="container flex h-20 items-center justify-between transition-[height] duration-300 ease-out group-data-scrolled:h-16"
  >
    <Link href="/" class="text-lg tracking-widest text-white">lehoczky.dev</Link
    >

    <div class="flex gap-3 text-3xl leading-none">
      <HeaderLink href={MY_GITHUB} aria-label="GitHub profile" target="_blank">
        <span class="i-bxl-github"></span>
      </HeaderLink>
      <HeaderLink
        href={MY_LINKEDIN}
        aria-label="LinkedIn profile"
        target="_blank"
      >
        <span class="i-bxl-linkedin"></span>
      </HeaderLink>
    </div>
  </div>
</header>

<script>
  import { bodyScrolledObserverElementId } from "../constants"

  const header = document.querySelector("header")
  const intersectorElement = document.getElementById(
    bodyScrolledObserverElementId,
  )

  const intersectionObserver = new IntersectionObserver((entries) => {
    if (header) {
      if (!entries[0].isIntersecting) {
        header.setAttribute("data-scrolled", "")
      } else {
        header.removeAttribute("data-scrolled")
      }
    }
  })

  if (intersectorElement) {
    intersectionObserver.observe(intersectorElement)
  }
</script>
