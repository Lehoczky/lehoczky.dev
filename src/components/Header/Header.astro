---
import type { HTMLAttributes } from "astro/types"

import { cn } from "@/libs/cn"

import Link from "../Link.vue"
import HeaderLink from "./HeaderLink.astro"

export interface Props extends HTMLAttributes<"header"> {}

const { class: className, ...attrs } = Astro.props
---

<header
  class={cn(
    "shadow-lg border-b border-neutral-800 sticky top-0 backdrop-blur-lg bg-neutral-900 bg-opacity-80 z-40",
    className,
  )}
  {...attrs}
>
  <div
    class="container flex justify-between items-center h-20 transition-[height] duration-300 ease-out"
  >
    <Link href="/" class="text-lg text-white tracking-widest">lehoczky.dev</Link
    >

    <div class="text-3xl leading-none flex gap-3">
      <HeaderLink
        href="https://github.com/Lehoczky"
        aria-label="GitHub profile"
        target="_blank"
      >
        <span class="i-bxl-github"></span>
      </HeaderLink>
      <HeaderLink
        href="https://www.linkedin.com/in/zolt%C3%A1n-lehoczky-bb32aa188/"
        aria-label="LinkedIn profile"
        target="_blank"
      >
        <span class="i-bxl-linkedin"></span>
      </HeaderLink>
    </div>
  </div>
</header>

<style>
  .scrolled > .container {
    @apply !h-16;
  }
</style>

<script>
  import { bodyScrolledObserverElementId } from "@/constants"

  const header = document.querySelector("header")
  const intersectorElement = document.getElementById(
    bodyScrolledObserverElementId,
  )

  const intersectionObserver = new IntersectionObserver((entries) => {
    if (header) {
      if (!entries[0].isIntersecting) {
        header.classList.add("scrolled")
      } else {
        header.classList.remove("scrolled")
      }
    }
  })

  if (intersectorElement) {
    intersectionObserver.observe(intersectorElement)
  }
</script>
